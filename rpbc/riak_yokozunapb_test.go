// Code generated by protoc-gen-gogo.
// source: riak_yokozuna.proto
// DO NOT EDIT!

/*
Package rpbc is a generated protocol buffer package.

It is generated from these files:
	riak_yokozuna.proto

It has these top-level messages:
	RpbYokozunaIndex
	RpbYokozunaIndexGetReq
	RpbYokozunaIndexGetResp
	RpbYokozunaIndexPutReq
	RpbYokozunaIndexDeleteReq
	RpbYokozunaSchema
	RpbYokozunaSchemaPutReq
	RpbYokozunaSchemaGetReq
	RpbYokozunaSchemaGetResp
*/
package rpbc

import testing4 "testing"
import math_rand4 "math/rand"
import time4 "time"
import code_google_com_p_gogoprotobuf_proto3 "code.google.com/p/gogoprotobuf/proto"
import testing5 "testing"
import math_rand5 "math/rand"
import time5 "time"
import encoding_json1 "encoding/json"
import testing6 "testing"
import math_rand6 "math/rand"
import time6 "time"
import code_google_com_p_gogoprotobuf_proto4 "code.google.com/p/gogoprotobuf/proto"
import math_rand7 "math/rand"
import time7 "time"
import testing7 "testing"
import code_google_com_p_gogoprotobuf_proto5 "code.google.com/p/gogoprotobuf/proto"

func TestRpbYokozunaIndexProto(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndex(popr, false)
	data, err := code_google_com_p_gogoprotobuf_proto3.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &RpbYokozunaIndex{}
	if err := code_google_com_p_gogoprotobuf_proto3.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRpbYokozunaIndexMarshalTo(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndex(popr, false)
	size := p.Size()
	data := make([]byte, size)
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	_, err := p.MarshalTo(data)
	if err != nil {
		panic(err)
	}
	msg := &RpbYokozunaIndex{}
	if err := code_google_com_p_gogoprotobuf_proto3.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkRpbYokozunaIndexProtoMarshal(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(616))
	total := 0
	pops := make([]*RpbYokozunaIndex, 10000)
	for i := 0; i < 10000; i++ {
		pops[i] = NewPopulatedRpbYokozunaIndex(popr, false)
	}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		data, err := code_google_com_p_gogoprotobuf_proto3.Marshal(pops[i%10000])
		if err != nil {
			panic(err)
		}
		total += len(data)
	}
	b.SetBytes(int64(total / b.N))
}

func BenchmarkRpbYokozunaIndexProtoUnmarshal(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(616))
	total := 0
	datas := make([][]byte, 10000)
	for i := 0; i < 10000; i++ {
		data, err := code_google_com_p_gogoprotobuf_proto3.Marshal(NewPopulatedRpbYokozunaIndex(popr, false))
		if err != nil {
			panic(err)
		}
		datas[i] = data
	}
	msg := &RpbYokozunaIndex{}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		total += len(datas[i%10000])
		if err := code_google_com_p_gogoprotobuf_proto3.Unmarshal(datas[i%10000], msg); err != nil {
			panic(err)
		}
	}
	b.SetBytes(int64(total / b.N))
}

func TestRpbYokozunaIndexGetReqProto(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndexGetReq(popr, false)
	data, err := code_google_com_p_gogoprotobuf_proto3.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &RpbYokozunaIndexGetReq{}
	if err := code_google_com_p_gogoprotobuf_proto3.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRpbYokozunaIndexGetReqMarshalTo(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndexGetReq(popr, false)
	size := p.Size()
	data := make([]byte, size)
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	_, err := p.MarshalTo(data)
	if err != nil {
		panic(err)
	}
	msg := &RpbYokozunaIndexGetReq{}
	if err := code_google_com_p_gogoprotobuf_proto3.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkRpbYokozunaIndexGetReqProtoMarshal(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(616))
	total := 0
	pops := make([]*RpbYokozunaIndexGetReq, 10000)
	for i := 0; i < 10000; i++ {
		pops[i] = NewPopulatedRpbYokozunaIndexGetReq(popr, false)
	}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		data, err := code_google_com_p_gogoprotobuf_proto3.Marshal(pops[i%10000])
		if err != nil {
			panic(err)
		}
		total += len(data)
	}
	b.SetBytes(int64(total / b.N))
}

func BenchmarkRpbYokozunaIndexGetReqProtoUnmarshal(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(616))
	total := 0
	datas := make([][]byte, 10000)
	for i := 0; i < 10000; i++ {
		data, err := code_google_com_p_gogoprotobuf_proto3.Marshal(NewPopulatedRpbYokozunaIndexGetReq(popr, false))
		if err != nil {
			panic(err)
		}
		datas[i] = data
	}
	msg := &RpbYokozunaIndexGetReq{}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		total += len(datas[i%10000])
		if err := code_google_com_p_gogoprotobuf_proto3.Unmarshal(datas[i%10000], msg); err != nil {
			panic(err)
		}
	}
	b.SetBytes(int64(total / b.N))
}

func TestRpbYokozunaIndexGetRespProto(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndexGetResp(popr, false)
	data, err := code_google_com_p_gogoprotobuf_proto3.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &RpbYokozunaIndexGetResp{}
	if err := code_google_com_p_gogoprotobuf_proto3.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRpbYokozunaIndexGetRespMarshalTo(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndexGetResp(popr, false)
	size := p.Size()
	data := make([]byte, size)
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	_, err := p.MarshalTo(data)
	if err != nil {
		panic(err)
	}
	msg := &RpbYokozunaIndexGetResp{}
	if err := code_google_com_p_gogoprotobuf_proto3.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkRpbYokozunaIndexGetRespProtoMarshal(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(616))
	total := 0
	pops := make([]*RpbYokozunaIndexGetResp, 10000)
	for i := 0; i < 10000; i++ {
		pops[i] = NewPopulatedRpbYokozunaIndexGetResp(popr, false)
	}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		data, err := code_google_com_p_gogoprotobuf_proto3.Marshal(pops[i%10000])
		if err != nil {
			panic(err)
		}
		total += len(data)
	}
	b.SetBytes(int64(total / b.N))
}

func BenchmarkRpbYokozunaIndexGetRespProtoUnmarshal(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(616))
	total := 0
	datas := make([][]byte, 10000)
	for i := 0; i < 10000; i++ {
		data, err := code_google_com_p_gogoprotobuf_proto3.Marshal(NewPopulatedRpbYokozunaIndexGetResp(popr, false))
		if err != nil {
			panic(err)
		}
		datas[i] = data
	}
	msg := &RpbYokozunaIndexGetResp{}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		total += len(datas[i%10000])
		if err := code_google_com_p_gogoprotobuf_proto3.Unmarshal(datas[i%10000], msg); err != nil {
			panic(err)
		}
	}
	b.SetBytes(int64(total / b.N))
}

func TestRpbYokozunaIndexPutReqProto(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndexPutReq(popr, false)
	data, err := code_google_com_p_gogoprotobuf_proto3.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &RpbYokozunaIndexPutReq{}
	if err := code_google_com_p_gogoprotobuf_proto3.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRpbYokozunaIndexPutReqMarshalTo(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndexPutReq(popr, false)
	size := p.Size()
	data := make([]byte, size)
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	_, err := p.MarshalTo(data)
	if err != nil {
		panic(err)
	}
	msg := &RpbYokozunaIndexPutReq{}
	if err := code_google_com_p_gogoprotobuf_proto3.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkRpbYokozunaIndexPutReqProtoMarshal(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(616))
	total := 0
	pops := make([]*RpbYokozunaIndexPutReq, 10000)
	for i := 0; i < 10000; i++ {
		pops[i] = NewPopulatedRpbYokozunaIndexPutReq(popr, false)
	}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		data, err := code_google_com_p_gogoprotobuf_proto3.Marshal(pops[i%10000])
		if err != nil {
			panic(err)
		}
		total += len(data)
	}
	b.SetBytes(int64(total / b.N))
}

func BenchmarkRpbYokozunaIndexPutReqProtoUnmarshal(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(616))
	total := 0
	datas := make([][]byte, 10000)
	for i := 0; i < 10000; i++ {
		data, err := code_google_com_p_gogoprotobuf_proto3.Marshal(NewPopulatedRpbYokozunaIndexPutReq(popr, false))
		if err != nil {
			panic(err)
		}
		datas[i] = data
	}
	msg := &RpbYokozunaIndexPutReq{}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		total += len(datas[i%10000])
		if err := code_google_com_p_gogoprotobuf_proto3.Unmarshal(datas[i%10000], msg); err != nil {
			panic(err)
		}
	}
	b.SetBytes(int64(total / b.N))
}

func TestRpbYokozunaIndexDeleteReqProto(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndexDeleteReq(popr, false)
	data, err := code_google_com_p_gogoprotobuf_proto3.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &RpbYokozunaIndexDeleteReq{}
	if err := code_google_com_p_gogoprotobuf_proto3.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRpbYokozunaIndexDeleteReqMarshalTo(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndexDeleteReq(popr, false)
	size := p.Size()
	data := make([]byte, size)
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	_, err := p.MarshalTo(data)
	if err != nil {
		panic(err)
	}
	msg := &RpbYokozunaIndexDeleteReq{}
	if err := code_google_com_p_gogoprotobuf_proto3.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkRpbYokozunaIndexDeleteReqProtoMarshal(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(616))
	total := 0
	pops := make([]*RpbYokozunaIndexDeleteReq, 10000)
	for i := 0; i < 10000; i++ {
		pops[i] = NewPopulatedRpbYokozunaIndexDeleteReq(popr, false)
	}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		data, err := code_google_com_p_gogoprotobuf_proto3.Marshal(pops[i%10000])
		if err != nil {
			panic(err)
		}
		total += len(data)
	}
	b.SetBytes(int64(total / b.N))
}

func BenchmarkRpbYokozunaIndexDeleteReqProtoUnmarshal(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(616))
	total := 0
	datas := make([][]byte, 10000)
	for i := 0; i < 10000; i++ {
		data, err := code_google_com_p_gogoprotobuf_proto3.Marshal(NewPopulatedRpbYokozunaIndexDeleteReq(popr, false))
		if err != nil {
			panic(err)
		}
		datas[i] = data
	}
	msg := &RpbYokozunaIndexDeleteReq{}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		total += len(datas[i%10000])
		if err := code_google_com_p_gogoprotobuf_proto3.Unmarshal(datas[i%10000], msg); err != nil {
			panic(err)
		}
	}
	b.SetBytes(int64(total / b.N))
}

func TestRpbYokozunaSchemaProto(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaSchema(popr, false)
	data, err := code_google_com_p_gogoprotobuf_proto3.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &RpbYokozunaSchema{}
	if err := code_google_com_p_gogoprotobuf_proto3.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRpbYokozunaSchemaMarshalTo(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaSchema(popr, false)
	size := p.Size()
	data := make([]byte, size)
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	_, err := p.MarshalTo(data)
	if err != nil {
		panic(err)
	}
	msg := &RpbYokozunaSchema{}
	if err := code_google_com_p_gogoprotobuf_proto3.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkRpbYokozunaSchemaProtoMarshal(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(616))
	total := 0
	pops := make([]*RpbYokozunaSchema, 10000)
	for i := 0; i < 10000; i++ {
		pops[i] = NewPopulatedRpbYokozunaSchema(popr, false)
	}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		data, err := code_google_com_p_gogoprotobuf_proto3.Marshal(pops[i%10000])
		if err != nil {
			panic(err)
		}
		total += len(data)
	}
	b.SetBytes(int64(total / b.N))
}

func BenchmarkRpbYokozunaSchemaProtoUnmarshal(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(616))
	total := 0
	datas := make([][]byte, 10000)
	for i := 0; i < 10000; i++ {
		data, err := code_google_com_p_gogoprotobuf_proto3.Marshal(NewPopulatedRpbYokozunaSchema(popr, false))
		if err != nil {
			panic(err)
		}
		datas[i] = data
	}
	msg := &RpbYokozunaSchema{}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		total += len(datas[i%10000])
		if err := code_google_com_p_gogoprotobuf_proto3.Unmarshal(datas[i%10000], msg); err != nil {
			panic(err)
		}
	}
	b.SetBytes(int64(total / b.N))
}

func TestRpbYokozunaSchemaPutReqProto(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaSchemaPutReq(popr, false)
	data, err := code_google_com_p_gogoprotobuf_proto3.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &RpbYokozunaSchemaPutReq{}
	if err := code_google_com_p_gogoprotobuf_proto3.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRpbYokozunaSchemaPutReqMarshalTo(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaSchemaPutReq(popr, false)
	size := p.Size()
	data := make([]byte, size)
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	_, err := p.MarshalTo(data)
	if err != nil {
		panic(err)
	}
	msg := &RpbYokozunaSchemaPutReq{}
	if err := code_google_com_p_gogoprotobuf_proto3.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkRpbYokozunaSchemaPutReqProtoMarshal(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(616))
	total := 0
	pops := make([]*RpbYokozunaSchemaPutReq, 10000)
	for i := 0; i < 10000; i++ {
		pops[i] = NewPopulatedRpbYokozunaSchemaPutReq(popr, false)
	}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		data, err := code_google_com_p_gogoprotobuf_proto3.Marshal(pops[i%10000])
		if err != nil {
			panic(err)
		}
		total += len(data)
	}
	b.SetBytes(int64(total / b.N))
}

func BenchmarkRpbYokozunaSchemaPutReqProtoUnmarshal(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(616))
	total := 0
	datas := make([][]byte, 10000)
	for i := 0; i < 10000; i++ {
		data, err := code_google_com_p_gogoprotobuf_proto3.Marshal(NewPopulatedRpbYokozunaSchemaPutReq(popr, false))
		if err != nil {
			panic(err)
		}
		datas[i] = data
	}
	msg := &RpbYokozunaSchemaPutReq{}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		total += len(datas[i%10000])
		if err := code_google_com_p_gogoprotobuf_proto3.Unmarshal(datas[i%10000], msg); err != nil {
			panic(err)
		}
	}
	b.SetBytes(int64(total / b.N))
}

func TestRpbYokozunaSchemaGetReqProto(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaSchemaGetReq(popr, false)
	data, err := code_google_com_p_gogoprotobuf_proto3.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &RpbYokozunaSchemaGetReq{}
	if err := code_google_com_p_gogoprotobuf_proto3.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRpbYokozunaSchemaGetReqMarshalTo(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaSchemaGetReq(popr, false)
	size := p.Size()
	data := make([]byte, size)
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	_, err := p.MarshalTo(data)
	if err != nil {
		panic(err)
	}
	msg := &RpbYokozunaSchemaGetReq{}
	if err := code_google_com_p_gogoprotobuf_proto3.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkRpbYokozunaSchemaGetReqProtoMarshal(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(616))
	total := 0
	pops := make([]*RpbYokozunaSchemaGetReq, 10000)
	for i := 0; i < 10000; i++ {
		pops[i] = NewPopulatedRpbYokozunaSchemaGetReq(popr, false)
	}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		data, err := code_google_com_p_gogoprotobuf_proto3.Marshal(pops[i%10000])
		if err != nil {
			panic(err)
		}
		total += len(data)
	}
	b.SetBytes(int64(total / b.N))
}

func BenchmarkRpbYokozunaSchemaGetReqProtoUnmarshal(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(616))
	total := 0
	datas := make([][]byte, 10000)
	for i := 0; i < 10000; i++ {
		data, err := code_google_com_p_gogoprotobuf_proto3.Marshal(NewPopulatedRpbYokozunaSchemaGetReq(popr, false))
		if err != nil {
			panic(err)
		}
		datas[i] = data
	}
	msg := &RpbYokozunaSchemaGetReq{}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		total += len(datas[i%10000])
		if err := code_google_com_p_gogoprotobuf_proto3.Unmarshal(datas[i%10000], msg); err != nil {
			panic(err)
		}
	}
	b.SetBytes(int64(total / b.N))
}

func TestRpbYokozunaSchemaGetRespProto(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaSchemaGetResp(popr, false)
	data, err := code_google_com_p_gogoprotobuf_proto3.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &RpbYokozunaSchemaGetResp{}
	if err := code_google_com_p_gogoprotobuf_proto3.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRpbYokozunaSchemaGetRespMarshalTo(t *testing4.T) {
	popr := math_rand4.New(math_rand4.NewSource(time4.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaSchemaGetResp(popr, false)
	size := p.Size()
	data := make([]byte, size)
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	_, err := p.MarshalTo(data)
	if err != nil {
		panic(err)
	}
	msg := &RpbYokozunaSchemaGetResp{}
	if err := code_google_com_p_gogoprotobuf_proto3.Unmarshal(data, msg); err != nil {
		panic(err)
	}
	for i := range data {
		data[i] = byte(popr.Intn(256))
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func BenchmarkRpbYokozunaSchemaGetRespProtoMarshal(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(616))
	total := 0
	pops := make([]*RpbYokozunaSchemaGetResp, 10000)
	for i := 0; i < 10000; i++ {
		pops[i] = NewPopulatedRpbYokozunaSchemaGetResp(popr, false)
	}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		data, err := code_google_com_p_gogoprotobuf_proto3.Marshal(pops[i%10000])
		if err != nil {
			panic(err)
		}
		total += len(data)
	}
	b.SetBytes(int64(total / b.N))
}

func BenchmarkRpbYokozunaSchemaGetRespProtoUnmarshal(b *testing4.B) {
	popr := math_rand4.New(math_rand4.NewSource(616))
	total := 0
	datas := make([][]byte, 10000)
	for i := 0; i < 10000; i++ {
		data, err := code_google_com_p_gogoprotobuf_proto3.Marshal(NewPopulatedRpbYokozunaSchemaGetResp(popr, false))
		if err != nil {
			panic(err)
		}
		datas[i] = data
	}
	msg := &RpbYokozunaSchemaGetResp{}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		total += len(datas[i%10000])
		if err := code_google_com_p_gogoprotobuf_proto3.Unmarshal(datas[i%10000], msg); err != nil {
			panic(err)
		}
	}
	b.SetBytes(int64(total / b.N))
}

func TestRpbYokozunaIndexJSON(t *testing5.T) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndex(popr, true)
	jsondata, err := encoding_json1.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &RpbYokozunaIndex{}
	err = encoding_json1.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func TestRpbYokozunaIndexGetReqJSON(t *testing5.T) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndexGetReq(popr, true)
	jsondata, err := encoding_json1.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &RpbYokozunaIndexGetReq{}
	err = encoding_json1.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func TestRpbYokozunaIndexGetRespJSON(t *testing5.T) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndexGetResp(popr, true)
	jsondata, err := encoding_json1.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &RpbYokozunaIndexGetResp{}
	err = encoding_json1.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func TestRpbYokozunaIndexPutReqJSON(t *testing5.T) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndexPutReq(popr, true)
	jsondata, err := encoding_json1.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &RpbYokozunaIndexPutReq{}
	err = encoding_json1.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func TestRpbYokozunaIndexDeleteReqJSON(t *testing5.T) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndexDeleteReq(popr, true)
	jsondata, err := encoding_json1.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &RpbYokozunaIndexDeleteReq{}
	err = encoding_json1.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func TestRpbYokozunaSchemaJSON(t *testing5.T) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaSchema(popr, true)
	jsondata, err := encoding_json1.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &RpbYokozunaSchema{}
	err = encoding_json1.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func TestRpbYokozunaSchemaPutReqJSON(t *testing5.T) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaSchemaPutReq(popr, true)
	jsondata, err := encoding_json1.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &RpbYokozunaSchemaPutReq{}
	err = encoding_json1.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func TestRpbYokozunaSchemaGetReqJSON(t *testing5.T) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaSchemaGetReq(popr, true)
	jsondata, err := encoding_json1.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &RpbYokozunaSchemaGetReq{}
	err = encoding_json1.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func TestRpbYokozunaSchemaGetRespJSON(t *testing5.T) {
	popr := math_rand5.New(math_rand5.NewSource(time5.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaSchemaGetResp(popr, true)
	jsondata, err := encoding_json1.Marshal(p)
	if err != nil {
		panic(err)
	}
	msg := &RpbYokozunaSchemaGetResp{}
	err = encoding_json1.Unmarshal(jsondata, msg)
	if err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Json Equal %#v", msg, p)
	}
}
func TestRpbYokozunaIndexProtoText(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndex(popr, true)
	data := code_google_com_p_gogoprotobuf_proto4.MarshalTextString(p)
	msg := &RpbYokozunaIndex{}
	if err := code_google_com_p_gogoprotobuf_proto4.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRpbYokozunaIndexProtoCompactText(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndex(popr, true)
	data := code_google_com_p_gogoprotobuf_proto4.CompactTextString(p)
	msg := &RpbYokozunaIndex{}
	if err := code_google_com_p_gogoprotobuf_proto4.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRpbYokozunaIndexGetReqProtoText(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndexGetReq(popr, true)
	data := code_google_com_p_gogoprotobuf_proto4.MarshalTextString(p)
	msg := &RpbYokozunaIndexGetReq{}
	if err := code_google_com_p_gogoprotobuf_proto4.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRpbYokozunaIndexGetReqProtoCompactText(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndexGetReq(popr, true)
	data := code_google_com_p_gogoprotobuf_proto4.CompactTextString(p)
	msg := &RpbYokozunaIndexGetReq{}
	if err := code_google_com_p_gogoprotobuf_proto4.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRpbYokozunaIndexGetRespProtoText(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndexGetResp(popr, true)
	data := code_google_com_p_gogoprotobuf_proto4.MarshalTextString(p)
	msg := &RpbYokozunaIndexGetResp{}
	if err := code_google_com_p_gogoprotobuf_proto4.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRpbYokozunaIndexGetRespProtoCompactText(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndexGetResp(popr, true)
	data := code_google_com_p_gogoprotobuf_proto4.CompactTextString(p)
	msg := &RpbYokozunaIndexGetResp{}
	if err := code_google_com_p_gogoprotobuf_proto4.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRpbYokozunaIndexPutReqProtoText(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndexPutReq(popr, true)
	data := code_google_com_p_gogoprotobuf_proto4.MarshalTextString(p)
	msg := &RpbYokozunaIndexPutReq{}
	if err := code_google_com_p_gogoprotobuf_proto4.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRpbYokozunaIndexPutReqProtoCompactText(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndexPutReq(popr, true)
	data := code_google_com_p_gogoprotobuf_proto4.CompactTextString(p)
	msg := &RpbYokozunaIndexPutReq{}
	if err := code_google_com_p_gogoprotobuf_proto4.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRpbYokozunaIndexDeleteReqProtoText(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndexDeleteReq(popr, true)
	data := code_google_com_p_gogoprotobuf_proto4.MarshalTextString(p)
	msg := &RpbYokozunaIndexDeleteReq{}
	if err := code_google_com_p_gogoprotobuf_proto4.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRpbYokozunaIndexDeleteReqProtoCompactText(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndexDeleteReq(popr, true)
	data := code_google_com_p_gogoprotobuf_proto4.CompactTextString(p)
	msg := &RpbYokozunaIndexDeleteReq{}
	if err := code_google_com_p_gogoprotobuf_proto4.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRpbYokozunaSchemaProtoText(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaSchema(popr, true)
	data := code_google_com_p_gogoprotobuf_proto4.MarshalTextString(p)
	msg := &RpbYokozunaSchema{}
	if err := code_google_com_p_gogoprotobuf_proto4.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRpbYokozunaSchemaProtoCompactText(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaSchema(popr, true)
	data := code_google_com_p_gogoprotobuf_proto4.CompactTextString(p)
	msg := &RpbYokozunaSchema{}
	if err := code_google_com_p_gogoprotobuf_proto4.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRpbYokozunaSchemaPutReqProtoText(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaSchemaPutReq(popr, true)
	data := code_google_com_p_gogoprotobuf_proto4.MarshalTextString(p)
	msg := &RpbYokozunaSchemaPutReq{}
	if err := code_google_com_p_gogoprotobuf_proto4.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRpbYokozunaSchemaPutReqProtoCompactText(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaSchemaPutReq(popr, true)
	data := code_google_com_p_gogoprotobuf_proto4.CompactTextString(p)
	msg := &RpbYokozunaSchemaPutReq{}
	if err := code_google_com_p_gogoprotobuf_proto4.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRpbYokozunaSchemaGetReqProtoText(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaSchemaGetReq(popr, true)
	data := code_google_com_p_gogoprotobuf_proto4.MarshalTextString(p)
	msg := &RpbYokozunaSchemaGetReq{}
	if err := code_google_com_p_gogoprotobuf_proto4.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRpbYokozunaSchemaGetReqProtoCompactText(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaSchemaGetReq(popr, true)
	data := code_google_com_p_gogoprotobuf_proto4.CompactTextString(p)
	msg := &RpbYokozunaSchemaGetReq{}
	if err := code_google_com_p_gogoprotobuf_proto4.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRpbYokozunaSchemaGetRespProtoText(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaSchemaGetResp(popr, true)
	data := code_google_com_p_gogoprotobuf_proto4.MarshalTextString(p)
	msg := &RpbYokozunaSchemaGetResp{}
	if err := code_google_com_p_gogoprotobuf_proto4.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRpbYokozunaSchemaGetRespProtoCompactText(t *testing6.T) {
	popr := math_rand6.New(math_rand6.NewSource(time6.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaSchemaGetResp(popr, true)
	data := code_google_com_p_gogoprotobuf_proto4.CompactTextString(p)
	msg := &RpbYokozunaSchemaGetResp{}
	if err := code_google_com_p_gogoprotobuf_proto4.UnmarshalText(data, msg); err != nil {
		panic(err)
	}
	if !p.Equal(msg) {
		t.Fatalf("%#v !Proto %#v", msg, p)
	}
}

func TestRpbYokozunaIndexSize(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndex(popr, true)
	size2 := code_google_com_p_gogoprotobuf_proto5.Size(p)
	data, err := code_google_com_p_gogoprotobuf_proto5.Marshal(p)
	if err != nil {
		panic(err)
	}
	size := p.Size()
	if len(data) != size {
		t.Fatalf("size %v != marshalled size %v", size, len(data))
	}
	if size2 != size {
		t.Fatalf("size %v != before marshal proto.Size %v", size, size2)
	}
	size3 := code_google_com_p_gogoprotobuf_proto5.Size(p)
	if size3 != size {
		t.Fatalf("size %v != after marshal proto.Size %v", size, size3)
	}
}

func BenchmarkRpbYokozunaIndexSize(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(616))
	total := 0
	pops := make([]*RpbYokozunaIndex, 1000)
	for i := 0; i < 1000; i++ {
		pops[i] = NewPopulatedRpbYokozunaIndex(popr, false)
	}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		total += pops[i%1000].Size()
	}
	b.SetBytes(int64(total / b.N))
}

func TestRpbYokozunaIndexGetReqSize(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndexGetReq(popr, true)
	size2 := code_google_com_p_gogoprotobuf_proto5.Size(p)
	data, err := code_google_com_p_gogoprotobuf_proto5.Marshal(p)
	if err != nil {
		panic(err)
	}
	size := p.Size()
	if len(data) != size {
		t.Fatalf("size %v != marshalled size %v", size, len(data))
	}
	if size2 != size {
		t.Fatalf("size %v != before marshal proto.Size %v", size, size2)
	}
	size3 := code_google_com_p_gogoprotobuf_proto5.Size(p)
	if size3 != size {
		t.Fatalf("size %v != after marshal proto.Size %v", size, size3)
	}
}

func BenchmarkRpbYokozunaIndexGetReqSize(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(616))
	total := 0
	pops := make([]*RpbYokozunaIndexGetReq, 1000)
	for i := 0; i < 1000; i++ {
		pops[i] = NewPopulatedRpbYokozunaIndexGetReq(popr, false)
	}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		total += pops[i%1000].Size()
	}
	b.SetBytes(int64(total / b.N))
}

func TestRpbYokozunaIndexGetRespSize(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndexGetResp(popr, true)
	size2 := code_google_com_p_gogoprotobuf_proto5.Size(p)
	data, err := code_google_com_p_gogoprotobuf_proto5.Marshal(p)
	if err != nil {
		panic(err)
	}
	size := p.Size()
	if len(data) != size {
		t.Fatalf("size %v != marshalled size %v", size, len(data))
	}
	if size2 != size {
		t.Fatalf("size %v != before marshal proto.Size %v", size, size2)
	}
	size3 := code_google_com_p_gogoprotobuf_proto5.Size(p)
	if size3 != size {
		t.Fatalf("size %v != after marshal proto.Size %v", size, size3)
	}
}

func BenchmarkRpbYokozunaIndexGetRespSize(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(616))
	total := 0
	pops := make([]*RpbYokozunaIndexGetResp, 1000)
	for i := 0; i < 1000; i++ {
		pops[i] = NewPopulatedRpbYokozunaIndexGetResp(popr, false)
	}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		total += pops[i%1000].Size()
	}
	b.SetBytes(int64(total / b.N))
}

func TestRpbYokozunaIndexPutReqSize(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndexPutReq(popr, true)
	size2 := code_google_com_p_gogoprotobuf_proto5.Size(p)
	data, err := code_google_com_p_gogoprotobuf_proto5.Marshal(p)
	if err != nil {
		panic(err)
	}
	size := p.Size()
	if len(data) != size {
		t.Fatalf("size %v != marshalled size %v", size, len(data))
	}
	if size2 != size {
		t.Fatalf("size %v != before marshal proto.Size %v", size, size2)
	}
	size3 := code_google_com_p_gogoprotobuf_proto5.Size(p)
	if size3 != size {
		t.Fatalf("size %v != after marshal proto.Size %v", size, size3)
	}
}

func BenchmarkRpbYokozunaIndexPutReqSize(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(616))
	total := 0
	pops := make([]*RpbYokozunaIndexPutReq, 1000)
	for i := 0; i < 1000; i++ {
		pops[i] = NewPopulatedRpbYokozunaIndexPutReq(popr, false)
	}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		total += pops[i%1000].Size()
	}
	b.SetBytes(int64(total / b.N))
}

func TestRpbYokozunaIndexDeleteReqSize(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaIndexDeleteReq(popr, true)
	size2 := code_google_com_p_gogoprotobuf_proto5.Size(p)
	data, err := code_google_com_p_gogoprotobuf_proto5.Marshal(p)
	if err != nil {
		panic(err)
	}
	size := p.Size()
	if len(data) != size {
		t.Fatalf("size %v != marshalled size %v", size, len(data))
	}
	if size2 != size {
		t.Fatalf("size %v != before marshal proto.Size %v", size, size2)
	}
	size3 := code_google_com_p_gogoprotobuf_proto5.Size(p)
	if size3 != size {
		t.Fatalf("size %v != after marshal proto.Size %v", size, size3)
	}
}

func BenchmarkRpbYokozunaIndexDeleteReqSize(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(616))
	total := 0
	pops := make([]*RpbYokozunaIndexDeleteReq, 1000)
	for i := 0; i < 1000; i++ {
		pops[i] = NewPopulatedRpbYokozunaIndexDeleteReq(popr, false)
	}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		total += pops[i%1000].Size()
	}
	b.SetBytes(int64(total / b.N))
}

func TestRpbYokozunaSchemaSize(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaSchema(popr, true)
	size2 := code_google_com_p_gogoprotobuf_proto5.Size(p)
	data, err := code_google_com_p_gogoprotobuf_proto5.Marshal(p)
	if err != nil {
		panic(err)
	}
	size := p.Size()
	if len(data) != size {
		t.Fatalf("size %v != marshalled size %v", size, len(data))
	}
	if size2 != size {
		t.Fatalf("size %v != before marshal proto.Size %v", size, size2)
	}
	size3 := code_google_com_p_gogoprotobuf_proto5.Size(p)
	if size3 != size {
		t.Fatalf("size %v != after marshal proto.Size %v", size, size3)
	}
}

func BenchmarkRpbYokozunaSchemaSize(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(616))
	total := 0
	pops := make([]*RpbYokozunaSchema, 1000)
	for i := 0; i < 1000; i++ {
		pops[i] = NewPopulatedRpbYokozunaSchema(popr, false)
	}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		total += pops[i%1000].Size()
	}
	b.SetBytes(int64(total / b.N))
}

func TestRpbYokozunaSchemaPutReqSize(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaSchemaPutReq(popr, true)
	size2 := code_google_com_p_gogoprotobuf_proto5.Size(p)
	data, err := code_google_com_p_gogoprotobuf_proto5.Marshal(p)
	if err != nil {
		panic(err)
	}
	size := p.Size()
	if len(data) != size {
		t.Fatalf("size %v != marshalled size %v", size, len(data))
	}
	if size2 != size {
		t.Fatalf("size %v != before marshal proto.Size %v", size, size2)
	}
	size3 := code_google_com_p_gogoprotobuf_proto5.Size(p)
	if size3 != size {
		t.Fatalf("size %v != after marshal proto.Size %v", size, size3)
	}
}

func BenchmarkRpbYokozunaSchemaPutReqSize(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(616))
	total := 0
	pops := make([]*RpbYokozunaSchemaPutReq, 1000)
	for i := 0; i < 1000; i++ {
		pops[i] = NewPopulatedRpbYokozunaSchemaPutReq(popr, false)
	}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		total += pops[i%1000].Size()
	}
	b.SetBytes(int64(total / b.N))
}

func TestRpbYokozunaSchemaGetReqSize(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaSchemaGetReq(popr, true)
	size2 := code_google_com_p_gogoprotobuf_proto5.Size(p)
	data, err := code_google_com_p_gogoprotobuf_proto5.Marshal(p)
	if err != nil {
		panic(err)
	}
	size := p.Size()
	if len(data) != size {
		t.Fatalf("size %v != marshalled size %v", size, len(data))
	}
	if size2 != size {
		t.Fatalf("size %v != before marshal proto.Size %v", size, size2)
	}
	size3 := code_google_com_p_gogoprotobuf_proto5.Size(p)
	if size3 != size {
		t.Fatalf("size %v != after marshal proto.Size %v", size, size3)
	}
}

func BenchmarkRpbYokozunaSchemaGetReqSize(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(616))
	total := 0
	pops := make([]*RpbYokozunaSchemaGetReq, 1000)
	for i := 0; i < 1000; i++ {
		pops[i] = NewPopulatedRpbYokozunaSchemaGetReq(popr, false)
	}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		total += pops[i%1000].Size()
	}
	b.SetBytes(int64(total / b.N))
}

func TestRpbYokozunaSchemaGetRespSize(t *testing7.T) {
	popr := math_rand7.New(math_rand7.NewSource(time7.Now().UnixNano()))
	p := NewPopulatedRpbYokozunaSchemaGetResp(popr, true)
	size2 := code_google_com_p_gogoprotobuf_proto5.Size(p)
	data, err := code_google_com_p_gogoprotobuf_proto5.Marshal(p)
	if err != nil {
		panic(err)
	}
	size := p.Size()
	if len(data) != size {
		t.Fatalf("size %v != marshalled size %v", size, len(data))
	}
	if size2 != size {
		t.Fatalf("size %v != before marshal proto.Size %v", size, size2)
	}
	size3 := code_google_com_p_gogoprotobuf_proto5.Size(p)
	if size3 != size {
		t.Fatalf("size %v != after marshal proto.Size %v", size, size3)
	}
}

func BenchmarkRpbYokozunaSchemaGetRespSize(b *testing7.B) {
	popr := math_rand7.New(math_rand7.NewSource(616))
	total := 0
	pops := make([]*RpbYokozunaSchemaGetResp, 1000)
	for i := 0; i < 1000; i++ {
		pops[i] = NewPopulatedRpbYokozunaSchemaGetResp(popr, false)
	}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		total += pops[i%1000].Size()
	}
	b.SetBytes(int64(total / b.N))
}

//These tests are generated by code.google.com/p/gogoprotobuf/plugin/testgen
